#!/bin/sh

topic() {
  echo "-----> $*"
}

indent() {
  sed -u 's/^/       /'
}

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

APT_CACHE_DIR="$CACHE_DIR/apt/cache"
APT_STATE_DIR="$CACHE_DIR/apt/state"
APT_OPTIONS="-o debug::nolocking=true -o dir::cache=$APT_CACHE_DIR -o dir::state=$APT_STATE_DIR"
APT_SOURCELIST_DIR="$CACHE_DIR/apt/sources"   # place custom sources.list here
APT_SOURCES="$APT_SOURCELIST_DIR/sources.list"
APT_OPTIONS="$APT_OPTIONS -o dir::etc::sourcelist=$APT_SOURCES"

if [ ! -s $ENV_DIR/INSTANA_AGENT_KEY -o ! -s $ENV_DIR/INSTANA_LOCATION  ]; then
  echo "Must set INSTANA_AGENT_KEY and INSTANA_LOCATION"
  exit 1
else
  INSTANA_AGENT_KEY=$(cat $ENV_DIR/INSTANA_AGENT_KEY)
  INSTANA_LOCATION=$(cat $ENV_DIR/INSTANA_LOCATION)

  echo "deb [arch=amd64] https://_:${INSTANA_AGENT_KEY}@packages.instana.io/agent generic main" >> $APT_SOURCELIST_DIR/instana-agent.list

  topic "Updating apt caches"
  apt-get $APT_OPTIONS update | indent

  topic "Fetching .debs for Instana agent"
  echo apt-get $APT_OPTIONS -y --force-yes -d install --reinstall instana-agent-static | indent
  apt-get $APT_OPTIONS -y --force-yes -d install --reinstall instana-agent-static | indent

  mkdir -p $BUILD_DIR/.apt

  for DEB in $(ls -1 $APT_CACHE_DIR/archives/*.deb); do
    topic "Installing $(basename $DEB)"
    dpkg -x $DEB $BUILD_DIR/.apt/
  done

  topic "Writing profile script"
  mkdir -p $BUILD_DIR/.profile.d
  cat <<EOF >$BUILD_DIR/.profile.d/000_apt.sh
  export PATH="\$HOME/.apt/usr/bin:\$PATH"
  export LD_LIBRARY_PATH="\$HOME/.apt/usr/lib/x86_64-linux-gnu:\$HOME/.apt/usr/lib/i386-linux-gnu:\$HOME/.apt/usr/lib:\$LD_LIBRARY_PATH"
  export LIBRARY_PATH="\$HOME/.apt/usr/lib/x86_64-linux-gnu:\$HOME/.apt/usr/lib/i386-linux-gnu:\$HOME/.apt/usr/lib:\$LIBRARY_PATH"
  export INCLUDE_PATH="\$HOME/.apt/usr/include:\$HOME/.apt/usr/include/x86_64-linux-gnu:\$INCLUDE_PATH"
  export CPATH="\$INCLUDE_PATH"
  export CPPPATH="\$INCLUDE_PATH"
  export PKG_CONFIG_PATH="\$HOME/.apt/usr/lib/x86_64-linux-gnu/pkgconfig:\$HOME/.apt/usr/lib/i386-linux-gnu/pkgconfig:\$HOME/.apt/usr/lib/pkgconfig:\$PKG_CONFIG_PATH"
EOF

  export PATH="$BUILD_DIR/.apt/usr/bin:$PATH"
  export LD_LIBRARY_PATH="$BUILD_DIR/.apt/usr/lib/x86_64-linux-gnu:$BUILD_DIR/.apt/usr/lib/i386-linux-gnu:$BUILD_DIR/.apt/usr/lib:$LD_LIBRARY_PATH"
  export LIBRARY_PATH="$BUILD_DIR/.apt/usr/lib/x86_64-linux-gnu:$BUILD_DIR/.apt/usr/lib/i386-linux-gnu:$BUILD_DIR/.apt/usr/lib:$LIBRARY_PATH"
  export INCLUDE_PATH="$BUILD_DIR/.apt/usr/include:$BUILD_DIR/.apt/usr/include/x86_64-linux-gnu:$INCLUDE_PATH"
  export CPATH="$INCLUDE_PATH"
  export CPPPATH="$INCLUDE_PATH"
  export PKG_CONFIG_PATH="$BUILD_DIR/.apt/usr/lib/x86_64-linux-gnu/pkgconfig:$BUILD_DIR/.apt/usr/lib/i386-linux-gnu/pkgconfig:$BUILD_DIR/.apt/usr/lib/pkgconfig:$PKG_CONFIG_PATH"

  #give environment to later buildpacks
  export | grep -E -e ' (PATH|LD_LIBRARY_PATH|LIBRARY_PATH|INCLUDE_PATH|CPATH|CPPPATH|PKG_CONFIG_PATH)='  > "$LP_DIR/export"

  topic "Rewrite package-config files"
  find $BUILD_DIR/.apt -type f -ipath '*/pkgconfig/*.pc' | xargs --no-run-if-empty -n 1 sed -i -e 's!^prefix=\(.*\)$!prefix='"$BUILD_DIR"'/.apt\1!g'

fi | indent
